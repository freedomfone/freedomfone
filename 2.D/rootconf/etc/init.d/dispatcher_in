#!/bin/sh
### BEGIN INIT INFO
# Provides:          freedomfone_disaptcher_in 
# Required-Start:
# Required-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start dispatcher (incoming) from Freedom Fone  
# Author: Alberto Escudero-Pascual aep@it46.se
### END INIT INFO
##############################################################################

set -eu
BASEDIR=/opt/freedomfone
DISPATCHER=$BASEDIR/dispatcher_in/dispatcherESL.php
DISPATCHERUSER=www-data
PIDFILE=$BASEDIR/gui/app/webroot/system/pid/dispatcher_in.pid
PIDFILE_PID=""
PID_PS=""
START_DAEMON=true
LOGFILE=/opt/freedomfone/log/dispatcher_in.log

test -f $DISPATCHER || exit 0

. /lib/lsb/init-functions

is_true()
{
  case "${1:-}" in
    [Yy]es|[Yy]|1|[Tt]|[Tt]rue) return 0;;
    *) return 1;
  esac
}


case "${1:-}" in
    start)
	#We check the process release exists
      if [ -f "$PIDFILE" ]; then
      PIDFILE_PID=`cat $PIDFILE`
      PID_PS=`ps -ef |grep dispatcherESL.php |grep '/usr/bin/php' | awk '{print $2}'`
      fi

     if [ "$PIDFILE_PID" != "$PID_PS" ] ; then 
         log_warning_msg "Warning: dispather crashed! Pid file exists but not process!"
      fi

     if [ -f "$PIDFILE" ] && [ -n "$PID_PS" ] ; then
         log_warning_msg "Warning: dispatcher daemon already running ($PIDFILE_PID,$PID_PS), doing nothing therefore."
         exit 0
      fi

      if is_true $START_DAEMON; then
         log_daemon_msg "Freedom Fone: Starting dispatcher" 
         set +e
         su - $DISPATCHERUSER -c "/usr/bin/php $DISPATCHER --log=$LOGFILE > /dev/null 2>&1 &"
         RC=$?
         set -e
         log_end_msg $RC
      else
         log_warning_msg "Not starting dispatcher_in daemon as startup is deactivated via /etc/default/dispatcherESL"
      fi
      ;;

    stop)
      if [ -f "$PIDFILE" ] ; then
         log_daemon_msg "Freedom Fone: Stopping dispatcher" 
         set +e
         start-stop-daemon -K -p $PIDFILE
         RC=$?
         rm -f $PIDFILE
         set -e
         log_end_msg $RC
      fi
      ;;

    status)
      [ -f "$PIDFILE" ] && PROCESS="$(cat $PIDFILE)" || PROCESS=''
      if [ -n "$PROCESS" ] ; then
         log_success_msg "dispatcher_in daemon with pid $PROCESS is running."
         exit 0
      else
         log_warning_msg "Could not find a running dispatcher_in daemon."
         exit 1
      fi
      ;;

    restart|reload|force-reload)
      $0 stop
      $0 start
      ;;

    *)
      echo "Usage: ${0:-} {start|stop|restart|reload|force-reload|status}" >&2
      exit 1
    ;;
esac

exit 0

# vim: ai expandtab
